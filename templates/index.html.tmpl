<!DOCTYPE html>
<html lang="en">
<head>
<script src="https://momentjs.com/downloads/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/d3@7"></script>
<script src="https://cdn.tailwindcss.com"></script>

</head>
<body>
<h1 class="bg-pink-500">Hello from Fly</h1>
{{ if .Region }}
<h2>I'm running in the {{.Region}} region</h2>
{{end}}

<div class="menu">
</div>

<script>

const div = d3.selectAll("div");
console.log('hi')
    d3.select('.menu').append('div').text('hiiiii')

d3.json('./test').then((hi) => {
    console.log(hi)
    d3.select('.menu').append('div').text('hiiiii')
})

const data = () => {
  const data = [];
  let d = moment("15-Mar-20");
  for (let i = 0, v = 2; i < 60; ++i) {
    v += Math.random() - 0.5;
    v = Math.max(Math.min(v, 4), 0);
    data.push({
      date: d.toDate(),
      value: v
    });

    //next date
    d = d.add(1, 'day');
  }
  return data;
}

function timeSeries(width, height, data) {
  
  const margin = { top: 20, right: 30, bottom: 30, left: 40 }
  const viewportHeight = height;
  const viewportWidth = width;
  const xMapper = d3
    .scaleUtc()
    .domain(d3.extent(data, d => d.date))
    .range([margin.left, viewportWidth - margin.right]);

  const yMapper = d3
    .scaleLinear()
    .domain([0, 4])
    .range([viewportHeight - margin.bottom, margin.top]);

  const line = d3
    .line()
    .x(d => xMapper(d.date))
    .y(d => yMapper(d.value));

  const xAxis = function(g) {
    return g.attr("transform", `translate(0,${height - margin.bottom})`).call(
      d3
        .axisBottom(xMapper)
        .ticks(10)
        .tickSizeOuter(0)
    );
  };

  const yAxis = function(g) {
    return g.attr("transform", `translate(${margin.left},0)`).call(
      d3
        .axisLeft(yMapper)
        .ticks(5)
        .tickSizeOuter(0)
    );
    // to remove the axis line, add the following
    // .call(g => g.select(".domain").remove());
  };

  const svg = d3
    .create("svg")
    .attr("width", width)
    .attr("height", height)
    .attr("style", "border:1px solid black");

  svg
    .append("path")
    .datum(data)
    .attr("d", line)
    .attr("fill", "none")
    .attr("stroke", "steelblue")
    .attr("stroke-width", 1.5)
    .attr("stroke-miterlimit", 1)
    .attr("stroke-linejoin", "round")
    .attr("stroke-linecap", "round");

  svg.append("g").call(xAxis);

  svg.append("g").call(yAxis);

  return svg.node();
}
document.body.appendChild(timeSeries(600, 200, data()))
</script>
</body>
</html>